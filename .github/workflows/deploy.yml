name: Deploy App

on:
  workflow_dispatch:
    inputs:
      tag:
        description: 'Branch or tag to deploy'
        required: false
        default: 'main'

jobs:
  deploy:
    runs-on: ubuntu-latest

    env:
      HOST: root@109.107.190.28
      DEPLOY_DIRECTORY: /root/weatherbot
      ENV_FILE_PATH: /root/weatherbot/.env

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tag }}
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 1.21

      - name: Build binary
        run: go build -o weatherbot ./cmd/weatherbot

      - name: Build binary
        run: go build -o weatherbot ./cmd/weatherbot

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H 109.107.190.28 >> ~/.ssh/known_hosts

      - name: Deploy binary via rsync
        run: |
          echo "${{ secrets.DEPLOY_SSH_KEY }}" > deploy_key.pem
          chmod 600 deploy_key.pem
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "mkdir -p ${{ env.DEPLOY_DIRECTORY }}"
          rsync -avz \
            -e 'ssh -i deploy_key.pem -o StrictHostKeyChecking=no' \
            ./weatherbot \
            ${{ env.HOST }}:${{ env.DEPLOY_DIRECTORY }}/weatherbot

      - name: Upload .env file to server
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} "\
            echo 'BOT_TOKEN=${{ secrets.BOT_TOKEN }}' > ${{ env.ENV_FILE_PATH }} && \
            echo 'OPENWEATHER_TOKEN=${{ secrets.OPENWEATHER_TOKEN }}' >> ${{ env.ENV_FILE_PATH }} && \
            chmod 600 ${{ env.ENV_FILE_PATH }}"

      - name: Restart bot on server
        run: |
          ssh -i deploy_key.pem -o StrictHostKeyChecking=no ${{ env.HOST }} << 'EOF'
            cd ${{ env.DEPLOY_DIRECTORY }}
            mkdir -p log storage
            pkill weatherbot || true
            nohup ./weatherbot > weatherbot.log 2>&1 &
          EOF
